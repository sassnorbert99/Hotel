Funkcionális specifikáció:
********************************************************
**Áttekintés
	A vendéglátás és turizmus egyben hozzájárul a gazdasági fejlődéshez, a kúltúrális értékeink megőrzéséhez, illetve
ösztönzőleg hat más gazdasági ágakra, például: infrastruktúra fejlesztése. A vendéglátás fókuszpontjában a hotelek, illetve
a panziók állnak, melyek arra törekednek, hogy a legjobb színvonallal fogadhassák vendégeiket, továbbá kellemes 
környezetben pihenésre és kikapcsolódásra adjanak lehetőséget. 

	Azonban már egy személy vendégül látása is igen nagy szervezettséget igényel. A népszerűbb vendéglátóhelyeken
azonban a vendégek száma jóval több. A szállodába, hotelbe látogatókról több információt is nyílván kell tartani ahhoz,
hogy számukra a megfelelő szolgáltatás legyen nyújtható, és a vállakozás kiegyensúlyozott működését is segíti, ha minden
információt rendezetten tárolunk. A fejlett informatika napjainkban beleszövődött a kereskedelem szinte minden területébe,
ezzel segítve az adminisztrációs, és nyilvántartó feladatokat. Kisebb szállásadók nem engedhetik meg maguknak a megfelelő 
szoftverek használatát, ezzel viszont veszítenek az ügyfelek szimpátiájából, és az elégedettségi mutatók is csökkennek.

	Célunk az, hogy egy olyan rendszert teremtsünk, mellyel alapvetően segítjük és gördülékenyebbé tesszük a kissebb 
vendéglátó egységek működését. Specifikációnk alapján szeretnénk olyan árat biztosítani, mely számukra is elérhető.
a szoftver képes arra, hogy a vendégekről a legtöbb számunkra jelentős információt struktúráltan tárolja. 
Mivel a szoftvert a legtöbb korosztály számára tervezzük, így ügyelnünk kell arra hogy minden korosztály számára érthető és 
használható legyen. 
A program javafx grafikus felületén használható, amelyhez tartozik egy adatbázis is, melyben az ügyfelek tulajdonságait 
tároljuk. Ha bármilyen információra van szükségünk, akkor ezeket az adatokat természetesen le is tudjuk kérni. Abból kiindulva,
hogy bizalmas adatok vannak a birtokunkban, azokat megfelelően kell kezelnünk és nem szabad engednünk, hogy illetéktelen kezekbe
 kerüljenek.


	


**A rendszer funkciói

	A funkciók kifejtése elõtt szót kell ejtenünk a platformról, operációs rendszer verziókról, valamint, hogy milyen eszközökre 
tervezzük megvalósítani az alkalmazást. A szoftver az IntelliJ IDEA*1 által támogatott Java programozási nyelvvel készül. 
Ennek legfõbb oka, hogy a kliensek ne legyenek operációs rendszerhez kötve, dinamikusan bármelyik operációs rendszerrel 
rendelkezõ számítógépen, illetve hordozható számítógépen el tudják érni, ezzel fokozva a felhasználói élményt.

	Sok felhasználó nem rendelkezik a Microsoft által kiadott Windows operációs rendszerrel, hanem más -lásd. Linux, Mac OS-
operációs rendszer szolgáltatásait veszik igénybe, melynek több oka is adódhat. Célunk tehát, hogy ne legyen operációs rendszerhez 
kötött szoftver, hanem bárki hozzáférhessen és hasznáni tudja a szoftver által nyújtott szolgáltatásokat.
	A megrendelõ pályázati elvárásai a következõk:
	-A rendszer offline legyen, így elkerülve a sebezhetőséget, és az adatlopást.
	-A rendszer legyen jól követhető, könnyen használható és jól átlátható.
	-A szoftver ne egy klón szoftver legyen, tehát más felépítésû legyen, mint az eddigi kiadott szoftverek.
	-A pályázati határidõ 2019 év 12 hónap 04 nap.
	-A megbízó számítógépes platformon, illetve különböző operációs rendszereken szeretné használni a szoftvert.
	Az általános törvények a rendszerünkre is vonatkozik, mind a megrendelõ, mind a projekt vezetõ beleegyezik abba, hogy a pályázatban
felsorolt pontokat betartja, továbbá mindkét fél tudomásul veszi a megrendelõ által meghatározott leadási határidõpontját. 
	A csoportunk ajánlásokkal kiegészítve, a megrendelõtõl engedélyt kér, hogy a projekt elemi részeit önállóan feldolgozhassák.
Ajánlások a következõk:
	-A megrendelõ igényeit kielégítve a program nem mobilos applikáció lesz, hanem a pályázatban megfogalmazott 4. pont alapján csak számítógépen lehet használni.
	-A szoftver offline lesz, és a vendégfelvétel csak egy helyen történik. 

	Fukcióinak kifejtése a következõk lesznek:

	Kliensoldal
	- nincs operációs rendszerhez kötve
	- csak számtógépes eszközökön érhetõ el.
	- az adatok adatbázisban lesznek tárolva, így ezekről az adatokról biztonsági mentés is készíthető.
	- A felhasználónak be kell jelentkeznie a szoftverfejlesztő által előre meghatározott bejelentkezési adatokkal. 
	- nem lesz szükség hálózati adatkapcsolatra, a program offline lesz elérhetõ
	
	


**Nem funkcionális követelményekk

	Használhatóság: a rendszer egyszerû felépítésû lesz, mely legfõképp a célközönség miatt lesz egy letisztult panel. 
A felhasználók a szoftver szolgáltatásait igénybe véve egy letisztult felület tárul eléjük, valamint a hagyományos és megszokott 
szoftver egyedi ötletekkel, igényeknek megfelelõ  eszközökkel tárul majd eléjük, mellyel élvezetesebbé válik a szolgáltatás.

	Teljesítmény:A fogyasztók a szolgáltatások teljesítményét a válaszidő és az áteresztőképesség alapján állapítják meg.  A rendszer
 nem lesz nagy tárhely, illetve memória igényû, ennek okai a gyors munkavégzés, valamint a felhasználókeltérõ eszközeik specifikációja. 
Teljesítmény szempontjából alacsony rangot kap, mely nem fogja elérni az 1GB tárhelyet, valamint az 
elegendõ RAM*2 csupán 500-1000MB lesz.

	Megbízhatóság: Csoportunk kifejezetten ügyel rá, hogy a felhasználó biztonságban érezhesse magát a szoftver által tárolt adatokkal 
kapcsolatban. Ebből kifolyólag kell olyan intézkedéseket csinálni, amely véd az adatlopás ellen: pl. a bejelenztkezés, illetve az offline működés.

	Skálázhatóság:A skálázhatóság komoly problémát jelent a szolgáltatásorientált rendszerekben. Nyilvános szolgáltatásoknál emellett fennáll a 
nemkívánatos hozzáférések veszélye, amik bár lehetnek véletlenek vagy szándékosak, mindenképpen hátrányosak a rendszer ellenőrzött skálázhatósága szempontjából. 
Mivel a célközönségünk között a kisebb vendéglátók szerepelnek, ahol kevesebb vendégre számíthatunk, így kapacitást is ennek megfelelően határoztuk meg kb. 100 főben. 
Ha több férőhelyre van szükség, akkor az dinamikusan később változtatható.

	A tranzakciók integritása:  a szoftver a logikailag összefüggő frissítések csoportját egyetlen munkaegységként hajtja végre.
Az integrált szolgáltatások általában egy üzleti tranzakcióhoz tartoznak, az undo (vagy a rollback) művelet feldolgozását pedig kompenzációs technikákkal oldják meg, 
amik az ellenkező logikai tevékenységet hajtják végre. Az alkalmazás tervezésekor biztosítani kell az atomi tranzakciók kezelésének lehetőségét a szolgáltatás-interfészek 
szemcsézettségének figyelembevételével.

	Biztonság és teljesítmény: A legáltalánosabb biztonsági követelmény a végfelhasználók és a középső réteghez tartozó szerverek hitelesítése.
A biztonsági architektúra kiválasztásakor igyekszünk megfelelni az üzleti követelményeknek, de kerüljük a többletterheléssel járó megoldásokat.
Vegyük figyelembe, hogy nem minden szolgáltatást és interakciót kell aláírni vagy titkosítani. Ezzel javíthatunk a szoftver teljesítményén.
	
	Helyreállítás:  A szolgáltatás-interfészek  kapcsolódási pontok, melyeken keresztül a konkrét implementációk elérhető. Ez azt jelenti, hogy a magukat az implementációkat 
futtató infrastruktúrát külön fel kell készíteni a katasztrófák kezelésére. Biztosítani kell például az adattároló központok redundanciáját. 
Mivel az alkalmazás offline, így távoli helyreállításra nincsen lehetőség. Az adatbázisról biztonsági mentések készíthetőek, mellyel egy esetleges adatvesztés 
helyre állítható és kiküszöbölhető.

**Megszorítások
	A működési környezet megszorításai: Mivel a megrendelő nem szolgáltatás orientált programot kér, így a tervezés és a programozás jóval ütemesebb és rugalmasabb.
Egy szolgáltatás orientált program létrehozásánál külön gondot kell fordítani, hogy a kommunikáció a szolgáltatás és az interfész között
minden platform között rugalmasan és megfelelően működjön. A mi esetünkben a szolgáltatás és az interfész is egy csomagban helyezkedik el,
ezzel elősegítve a biztonságos, kiegyensúlyozott  és gyors működést.

	Szakértelmi megszorítások: A szakértelmi megszorítások korlátozzák a technikai környezet és a nem funkcionális követelmények fejlesztésének és megváltoztatásának 
lehetőségét. A technológiai tudásterületek folyamatosan változnak, ami miatt a technikai csapatnak rendszeresen tréningre van szüksége, vagy külső konzultánsok szakértelmét kell 
igénybe venni.

**Interfészek

	A felhasználó(jelen esetünkben: recepciós) a programot használva tudja majd a vendéglátó épületbe érkező vendégek adatait struktúráltan nyílvántartani.
A felhasználó elkéri a vendégek adatait, majd a számítógépen meghívja a programot, a program a számítógép feldolgozó egységét CPU*3 és a memóriáját használva
rögzíti az adatokat egy adatbázisba, mely adatbázis a számítógép saját háttértárán található.

A program nem fog tartalmazni a külsõ kapcsolatokat biztosító interfészeket, mivel az adatbázis lokálisan elérhető,így  nem kell majd hálózati adatkapcsolat a forások eléréséhez.
Felhasználói interfész (GUI) terv – ahogy az alkalmazás „kinéz” majd (lehet vázlatos is, részben ez alapján készülnek majd a részletes képernyõtervek)
- kezdetben a felhasználó egy teljesen letisztult képernyõvel fog találkozni, mely hagyományos színeket és felépítést, felbontást fog tartalmazni

	- a felhasználó egy egyszerű bejelentkezési képernyővel fog találkozni, ahol az általunk készített azonosítóval, illetve jelszóval tud majd bejelentkezni.
		(bejelentkezés nélkül a szoftver nem hazsnálható, az adatvédelmi elővigyázatosságból kiindulva)

	- Ha a kliens a szolgáltatást meg akarja szakítani, esetleg késõbb igénybe venni, ehhez rendelkezni fog egy "kilépés" gomb, mely rákattintás után
megszakítja, majd kilép a programból, ezzel együtt kijelentkezik. Az alkalmazás bezárása után ismét meg kell adnia adatait.

	- Az általunk készített szoftver a felhasználó és az adatbázis között fog egy közös réteget biztosítani. A szoftver segít a felhasználónak
grafikus úton  menedzselni az adatbázist, könnyíti az átláthatóságot, illetve megakadályozza, hogy az adatbázisban redundancia*4 keletkezzen.
Példának okáért, ha a felhasználó egy olyan személyt próbál regisztrálni, aki már jelen van az adatbázisban, akkor őt egy hibaüzenettel tájékoztatja erről.
	

**Az szoftver működésének áttekintése
	A felhasználók a szoftvert használva egy letisztult szoftver felületen található bejelentkezéssel találkoznak. A bejelentkezés során meg kell adni egy 
általunk adott felhasználói nevet és jelszót. A jelszó titkosítva van a szoftverben. A jelszó beviteli mezője is titkosítja a beírt jelszót és a két titkosítási érték
kerül összehasonlításra. Így a jelszó valós formája sehol sem tárolódik a szoftverben. 

	Az adatellenőrzést követően a felhasználó beléphet a "főprogram" felületére, 
ahol elvégezheti a vendéglátó egységgel kapcsolatos műveleteket. Egy helyen tud új foglalást rögzíteni, ellenőrizheti a szabad szobák listáját, megtekintheti
melyik szobában melyik vendég tartózkodik.
 	


--------------------------------------------------------------------------------------------------------------------------------------------------------------
fogalomtár:
	-*1 IntelliJ IDEA: egy Java IDE a JetBrains-tõl, elérhetõ Apache 2 Licenccel közösségi kiadásban és kereskedelmi kiadásban is.
Gyakran egyszerûen csak "IDEA"-ként vagy "IntelliJ"-ként hivatkoznak rá.
	-*2 RAM: A RAM (az angol Random Access Memory rövidítéseként, tetszõleges hozzáférésû memória, közvetlen hozzáférésû memória, véletlen hozzáférésû memória,
bár ez utóbbi helytelenül terjedt el). egy véletlen elérésû írható–olvasható adattároló eszköz.
	-*3 CPU: Central process unit, a számítógép központi feldolgozó egysége. Minden egyes számítást ez az egység végez el.
	-*4 redundancia: Jelen esetünkben adatismétlés a táblázat egyedi azonosítói között.
