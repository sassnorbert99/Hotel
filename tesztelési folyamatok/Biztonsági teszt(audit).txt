					Biztonsági teszt


A támadások azok a technológiák, amiket a támadók használnak, hogy kihasználják az
alkalmazások sebezhetõ pontjait. A támadásokat gyakran tévesztik össze a sebezhetõ
pontokkal. Egy támadás leírása azt mondja el, hogy mit tenne a támadó a gyengeség
kihasználására, nem pedig az alkalmazás gyenge pontjait ismerteti.
Ebben a fejezetben a legfontosabb biztonsági támadásokat ismertetjük, hogy a tesztelés
során tudjuk, minek lesz kitéve az alkalmazásunk. Ha ismerjük a biztonsági támadásokat,
akkor a tesztek során kipróbálhatjuk, hogy alkalmazásunk ellen áll-e a támadásnak. Ha igen,
akkor a kiadott szoftverünk kisebb kockázatot jelent a használójának és így nagyobb értéket
képvisel. A támadás ellenállóság egyrészt verseny elõny, másrészt az elkérhetõ magasabb ár
fedezi a tesztelés extra költségeit. Az extra költségek a magasan képzett tesztelõk magasabb
munkadíjából és a támadás ellenállóság tesztelésének viszonylag idõigényes volta jelenti.
Ugyanakkor a támadás ellenállóság vizsgálatához nem elég csak a legfontosabb támadásokat
ismerni, hiszen újabb és újabb támadási módszereket fejlesztenek ki az IT rendszerek
feltörésére specializálódott hacker-ek.
A támadás ellenállóság tesztelése általában feketedobozos teszt. Történhet a rendszer
kiadása elõtt vagy után is. Ha utána történik, akkor általában etikus törési kísérletrõl
beszélünk. Ehhez általában külsõ szakembereket, fehér kalapos hacker-eket szoktak felkérni.
Ha a kiadás elõtt történik, akkor általában a legmagasabban képzett belsõ tesztmérnökök
feladata. Ez a fejezet nekik szól, de a szükséges ismereteknek csak egy részét tartalmazza.
A biztonsági támadások legfontosabb típusai (támadás fajtái – konkrét támadások):

• „Mûködés ellehetetlenítése – Cache Mérgezés” (Abuse of Functionality - Cache
Poisoning )
 (Data Structure Attacks - Overflow Binary Resource fájl )
 „Ártalmas kód beágyazása – logikai/idõzített bomba (Embeeded Malicious Code -
Logic/time bomb)
 „Trójai” (Troyan Horse)
 „Azonosítási folyamat kihasználása – Account kizárási támadás” (Exploitation of
Authentication - Account lockout attack)
 „Befecskendezés – Közvetlen statikus kód befecskendezése” (Injection - Direct Static
Code Injection)
Szoftver tesztelés
6-2
 „Útkeresztezési támadás” (Path Traversal Attack)
 „Próbálgatós technológiák – nyers erõ támadás” (Probabilistic Techniques - Brute
force attack)
 „Protokol manipuláció – http válasz szétválasztás” (Protocol Manipulation - Http
Response Splitting)
 „Forrás kimerítés – aszimmetrikus erõforrások elfogyasztása (erõsítés)” (Resource
Depletion - Asymmetric resource consumption (amplification))
 „Erõforrás manipuláció – kémprogram” (Resource Manipulation – Spyware)
 „Szimatoló támadás – Hálózati lehallgatás” (Sniffing Attacks - Network
Eavesdropping)
 „Átverés – oldalakon keresztüli kérelem hamisítás (CSRF)” (Spoofing - Cross-Site
Request Forgery (CSRF))





2019.12.01
Készítette: Oravecz Zsolt

	Béta verzió megnevezése		kód		felhasználó			funkció			megjegyzés

	HotelLite Beta			001		Oravecz Zsolt			adatbiztonság		regisztrálni egy fiókkal lehet, melyet a csoport generál

**************************************************************************************************************************************************************************

2019.12.01
Készítette: Sass-Gyarmati Norbert


	Béta verzió megnevezése		kód		felhasználó			funkció			megjegyzés


	Hotellite Beta			002		Sass-Gyarmati Norbert		adatfeltöltés		adatokat csak bejelentkezés után tudtam lekérni, illetve 
														feltölteni
	
************************************************************************************************************************************************************************


2019.12.02
Készítette: Sass-Gyarmati Norbert

	Béta verzió megnevezése		kód		felhasználó			funkció			megjegyzés


	Hotellite Beta			003		Sass-Gyarmati Norbert		adatbiztonság		Az adatokat csak akkor lehet kinyerni, ha arra jogosult
														felhasználó teszi. A védet adatok egy hash függvény alatt
														van kódolva, ezáltal nem lehet az eredetire visszafejteni.

************************************************************************************************************************************************************************

2019.12.03
Készítette: Oravecz Zsolt

	Béta verzió megnevezése		kód		felhasználó			funkció			megjegyzés



	Hotellite Beta			005		Oravecz Zsolt			adatlekérés		Az adatokat csak arra jogosult kliens kérhet le, adatbázis
														szervert csak a szoftverkliens által lehet elérni

************************************************************************************************************************************************************************

2019.12.03.
Készítette: Sass-Gyarmati Norbert

	Béta verzió megnevezése		kód		felhasználó			funkció			megjegyzés



	Hotellite Beta			006		Sass-Gyarmati Norbert		adatfeltöltés		A szoftver jelzi, ha helytelen adatot szeretne a kliens	
														feltölteni, így nem áll le a program, hanem helytelen adatok
														után is tovább tud futni.

************************************************************************************************************************************************************************

2019.12.04
Készítette: Oravecz Zsolt

	Béta verzió megnevezése		kód		felhasználó			funkció			megjegyzés


	Hotellite Beta			007		Oravecz Zsolt			adatbiztonság		Az adatok értékei hash függvény miatt nem olvasható,
														ezáltal nem lehet visszafejteni.

