Hotel szoftver prototípusa
2019.10.27
Bevezetés:
	A hoteleknek készülõ recepciós szoftverrõl készítettünk egy prototípust,
melyben szemléltetjük a panel kialakítását, a fõbb funkciókat, illetve, a 
menüpontokat. A prototípus nem fog rendelkezni esztétikai jellemzõkkel, csak maga
a váz szerkezet lesz a fõbb funkcióival.
	A szoftvert windows operációs rendszerû számítógépen készítettük, programzási
nyelvet tekintve pedig a visual studio által támogatott c# programozási nyelvet
használtuk, ezen belül a vizuális windows form applikációt.
	A szoftverben minden adat statikusan -beleégetve- lesznek felépítve,
a prototípus funkcióit tekintve nem kötelezõ dinamikus adatokkal, adatbázissal
adatokat lekérdezni, illetve feltölteni.
	A prototípus programunk memóriáját tekintve rendkívül alacsony, ami annak a
következménye, hogy semmi megterhelõ, nagyon méretû grafikai beállítást nem tartalmaz.
****************************************************************************
2019.11.03.

Jellemzõk:
- operációs rendszer: windows
- programozási nyelv: c# - winform application
- adatok szerkezete: statikus
- adatbázis: nincs
- RAM: <100MB
- tesztelt eszközök: PC, notebook
****************************************************************************
2019.11.04
Fõbb funkciói:
- vendégek felvétele a jegyzékbe
- vendégek datainak listázása
- szobák és azok funkcióinak listázása
- vendégek által lefoglalt szobák listázása


	A szoftver elkészült, tesztelések alatt esett át, melyet külön jegyzõkönyvbe vezettünk
A tesztelési folyamatnak csak Unit tesztelés alatt esett át, melyben a szoftver
kapacitását mértük.
	A prototípusról készültek képernyõképek, melyet a képernyõtervben lehet
megtekinteni, illetve ott lehet részletesen olvasni róla.

Tesztelés:

A prototípusunk unit tesztelésen esett át, melyben fõbb feladatunk volt,
hogy a program kapacitása nagyobb mennyiségnél ne omljon össze, melyet 
metódusok segítségével tudtunk létrehozni.
1.

for (int i = 0; i < 100000; i++)
            {
                comboBox2.Items.Add("szobaszám: " + szoba[i].Szoba + " ágyak száma: " + szoba[i].Agyszam + " felszererltsége: " + szoba[i].Felszereles);
            }

tulajdonságok:
- a rendszer lassabbnak bizonyult, azonban nem omlott össze, sikeres tesztelés.
- a memória hirtelen megnõtt, de ezek az adatok néhány kb plusz adatot tudtak 
szolgáltatni, ezáltal sikeres tesztelés volt.
- a panelen látszólag nem történt semmi negatív változás, sikeres tesztelés.

2.

for (int i = 0; i < 999999999999999999; i++)
            {
                comboBox1.Items.Add("név: " + vendeglista[i].Nev + " taj száma: " + vendeglista[i].Taj + " lakcíme: " + vendeglista[i].Lakcim + " kivett szoba: " + vendeglista[i].KivettSzoba);
            }

tulajdonságok:
- a rendszer lényegesebben lassabbnak bizonyult, azonban nem omlott össze, 
sikeres tesztelés.
- a memória hirtelen megnõtt, de ezek az adatok néhány kb plusz adatot tudtak 
szolgáltatni, ezáltal sikeres tesztelés volt.
- a panelen negatív változás történt, mely abban nyilvánult meg,
hogy több idõt kellett várni a legördülõ menü lekérdezéséhez, sikertelen tesztelés


	A tesztelések alatt megfigyeltük, hogy a szoftver normálisan fog mûködni, 
reális adatokkal tud dolgozni, valamint irreális adatok során sem omlik össze a 
rendszer.
	Megfigyeltük tobábbá, hogy a memória igénye dinamikusan fejlõdik,
ezáltal a teljes szoftver memória igénye körülbelül kevesebb lesz, mint 200MB.
	
tesztelve:
- Windows PC
- Windows notebook
